---
# 1. Create Kafka group
- name: Create Kafka group
  group:
    name: "{{ kafka_group }}"
    state: present

# 2. Create Kafka user
- name: Create Kafka user
  user:
    name: "{{ kafka_user }}"
    group: "{{ kafka_group }}"
    create_home: no
    shell: /bin/false

# 3. Create Kafka install directory
- name: Create Kafka install directory
  file:
    path: "{{ kafka_install_dir }}"
    state: directory
    owner: "{{ kafka_user }}"
    group: "{{ kafka_group }}"
    mode: '0755'
  become: yes

# 4. Download Kafka tarball
- name: Download Kafka
  get_url:
    url: "{{ kafka_download_url }}"
    dest: "{{ kafka_install_dir }}/{{ kafka_package }}.tgz"
    mode: '0644'
  become: yes

# 5. Extract Kafka
- name: Extract Kafka
  unarchive:
    src: "{{ kafka_install_dir }}/{{ kafka_package }}.tgz"
    dest: "{{ kafka_install_dir }}/"
    remote_src: yes
    creates: "{{ kafka_install_dir }}/{{ kafka_package }}"
    owner: "{{ kafka_user }}"
    group: "{{ kafka_group }}"
  become: yes

# 6. Create Kafka data and PID directories
- name: Create Kafka data and PID directories
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ kafka_user }}"
    group: "{{ kafka_group }}"
    mode: '0755'
  loop:
    - "{{ kafka_data_dir }}"
    - "{{ kafka_data_dir }}/logs"
    - "{{ kafka_pid_dir }}"
  become: yes

# 7. Fix ownership of Kafka directories
- name: Ensure Kafka directories ownership
  file:
    path: "{{ item }}"
    owner: "{{ kafka_user }}"
    group: "{{ kafka_group }}"
    recurse: yes
  loop:
    - "{{ kafka_install_dir }}/{{ kafka_package }}"
    - "{{ kafka_data_dir }}"
    - "{{ kafka_pid_dir }}"
  become: yes

# 8. Set broker.id dynamically
- name: Set broker ID
  set_fact:
    broker_id: "{{ play_hosts.index(inventory_hostname) + 1 }}"

# 9. Configure Kafka server.properties
- name: Configure Kafka server.properties
  template:
    src: server.properties.j2
    dest: "{{ kafka_install_dir }}/{{ kafka_package }}/config/server.properties"
    mode: '0644'
    owner: "{{ kafka_user }}"
    group: "{{ kafka_group }}"
  become: yes

# 10. Create systemd service for Kafka
- name: Create Kafka systemd service
  template:
    src: kafka.service.j2
    dest: /etc/systemd/system/kafka.service
    mode: '0644'
  become: yes

# 11. Reload systemd daemon
- name: Reload systemd daemon
  systemd:
    daemon_reload: yes
  become: yes

# 12. Enable and start Kafka service
- name: Enable and start Kafka service
  systemd:
    name: kafka
    enabled: yes
    state: started
  become: yes
