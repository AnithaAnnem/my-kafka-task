pipeline {
    agent any

    environment {
        ANSIBLE_KEY   = '/var/lib/jenkins/.ssh/MYKAFKA.pem'
        ANSIBLE_USER  = 'ubuntu'
        INVENTORY     = 'kafkacluster/aws_ec2.yml'
        PLAYBOOK      = 'kafkacluster/site.yml'
        GIT_REPO      = 'https://github.com/AnithaAnnem/my-kafka-task.git'
        GIT_BRANCH    = 'main'
    }

    stages {

        stage('Checkout Code') {
            steps {
                echo "Checking out Git repository..."
                checkout([$class: 'GitSCM',
                          branches: [[name: "*/${GIT_BRANCH}"]],
                          userRemoteConfigs: [[url: "${GIT_REPO}"]]
                ])
            }
        }

        // ===== Ansible CI Checks =====
        stage('Ansible Lint') {
            steps {
                echo "Running ansible-lint on playbooks..."
                sh '''
                export ANSIBLE_HOST_KEY_CHECKING=False
                ansible-lint ${PLAYBOOK}
                '''
            }
        }

        stage('Ansible Syntax Check') {
            steps {
                echo "Checking playbook syntax..."
                sh '''
                export ANSIBLE_HOST_KEY_CHECKING=False
                ansible-playbook -i ${INVENTORY} ${PLAYBOOK} --syntax-check
                '''
            }
        }

        stage('Ansible Dry Run (Check Mode)') {
            steps {
                echo "Performing dry run of playbooks..."
                sh '''
                export ANSIBLE_HOST_KEY_CHECKING=False
                ansible-playbook -i ${INVENTORY} ${PLAYBOOK} --check -u ${ANSIBLE_USER} --private-key ${ANSIBLE_KEY}
                '''
            }
        }

        // ===== Deployment Stages =====
        stage('Deploy Zookeeper') {
            steps {
                echo "Deploying Zookeeper cluster..."
                sh '''
                export ANSIBLE_HOST_KEY_CHECKING=False
                ansible-playbook -i ${INVENTORY} ${PLAYBOOK} -u ${ANSIBLE_USER} --private-key ${ANSIBLE_KEY} --tags zookeeper
                '''
            }
        }

        stage('Deploy Kafka') {
            steps {
                echo "Deploying Kafka cluster..."
                sh '''
                export ANSIBLE_HOST_KEY_CHECKING=False
                ansible-playbook -i ${INVENTORY} ${PLAYBOOK} -u ${ANSIBLE_USER} --private-key ${ANSIBLE_KEY} --tags kafka
                '''
            }
        }
    }

    post {
        success {
            echo "Ansible CI checks and Kafka/Zookeeper deployment completed successfully!"
        }
        failure {
            echo "Pipeline failed. Check logs for details."
        }
        always {
            echo "Cleaning workspace..."
            cleanWs()
        }
    }
}
