pipeline {
    agent any
    environment {
        AWS_CREDS = credentials('AWS-creds')  // if you need AWS API credentials
    }
    stages {

        stage('Test SSH Connectivity') {
            steps {
                withCredentials([sshUserPrivateKey(
                    credentialsId: 'AWS-SSH-key'  // Jenkins SSH key ID
                )]) {
                    echo "Testing SSH connectivity to all EC2 instances..."
                    sh '''
                        ansible all -i kafkacluster/aws_ec2.yml -m ping
                    '''
                }
            }
        }

        stage('Deploy Zookeeper Cluster') {
            steps {
                withCredentials([sshUserPrivateKey(
                    credentialsId: 'AWS-SSH-key'
                )]) {
                    echo "Deploying Zookeeper Cluster..."
                    sh '''
                        ansible-playbook -i kafkacluster/aws_ec2.yml kafkacluster/site.yml --tags zookeeper -u ubuntu
                    '''
                }
            }
        }

        stage('Verify Zookeeper Quorum') {
            steps {
                withCredentials([sshUserPrivateKey(
                    credentialsId: 'AWS-SSH-key'
                )]) {
                    echo "Verifying Zookeeper quorum..."
                    sh '''
                        ansible all -i kafkacluster/aws_ec2.yml -m shell -a "/opt/zookeeper/apache-zookeeper-3.9.2-bin/bin/zkServer.sh status" -u ubuntu
                    '''
                }
            }
        }

        stage('Deploy Kafka Brokers') {
            steps {
                withCredentials([sshUserPrivateKey(
                    credentialsId: 'AWS-SSH-key'
                )]) {
                    echo "Deploying Kafka Brokers..."
                    sh '''
                        ansible-playbook -i kafkacluster/aws_ec2.yml kafkacluster/site.yml --tags kafka -u ubuntu
                    '''
                }
            }
        }

        stage('Verify Kafka Cluster') {
            steps {
                withCredentials([sshUserPrivateKey(
                    credentialsId: 'AWS-SSH-key'
                )]) {
                    echo "Verifying Kafka brokers..."
                    sh '''
                        ansible all -i kafkacluster/aws_ec2.yml -m shell -a "/opt/kafka/kafka_2.13-3.7.0/bin/kafka-broker-api-versions.sh --bootstrap-server {{ ansible_host }}:9092" -u ubuntu
                    '''
                }
            }
        }

        stage('Create Test Kafka Topic') {
            steps {
                withCredentials([sshUserPrivateKey(
                    credentialsId: 'AWS-SSH-key'
                )]) {
                    echo "Creating test Kafka topic..."
                    sh '''
                        ansible all -i kafkacluster/aws_ec2.yml -m shell -a "/opt/kafka/kafka_2.13-3.7.0/bin/kafka-topics.sh --create --topic test-topic --partitions 3 --replication-factor 3 --bootstrap-server {{ ansible_host }}:9092" -u ubuntu
                    '''
                }
            }
        }

        stage('Clean Workspace') {
            steps {
                echo "Cleaning workspace..."
                cleanWs()
            }
        }

    }

    post {
        success {
            echo "Kafka & Zookeeper deployment completed successfully."
        }
        failure {
            echo "Deployment failed. Check logs for errors."
        }
    }
}
