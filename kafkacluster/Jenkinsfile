pipeline {
    agent any

    environment {
        // AWS region if needed for dynamic inventory
        AWS_REGION = 'us-east-1'
    }

    stages {

        stage('Checkout Code') {
            steps {
                echo "Checking out Kafka cluster code..."
                git branch: 'main',
                    url: 'git@github.com:AnithaAn/kafkacluster.git',
                    credentialsId: 'ubuntu'
            }
        }

        stage('Test SSH Connectivity') {
            steps {
                echo "Testing SSH connectivity to all EC2 instances..."
                sh """
                    ansible all -i kafkacluster/aws_ec2.yml -u ubuntu --private-key /var/lib/jenkins/.ssh/id_rsa -m ping
                """
            }
        }

        stage('Deploy Zookeeper Cluster') {
            steps {
                echo "Deploying Zookeeper Cluster..."
                sh """
                    ansible-playbook -i kafkacluster/aws_ec2.yml kafkacluster/site.yml --tags zookeeper
                """
            }
        }

        stage('Verify Zookeeper Quorum') {
            steps {
                echo "Verifying Zookeeper Quorum..."
                sh """
                    ansible all -i kafkacluster/aws_ec2.yml -u ubuntu --private-key /var/lib/jenkins/.ssh/id_rsa -m shell -a 'echo stat | nc localhost 2181'
                """
            }
        }

        stage('Deploy Kafka Brokers') {
            steps {
                echo "Deploying Kafka Brokers..."
                sh """
                    ansible-playbook -i kafkacluster/aws_ec2.yml kafkacluster/site.yml --tags kafka
                """
            }
        }

        stage('Verify Kafka Cluster') {
            steps {
                echo "Verifying Kafka Cluster..."
                sh """
                    ansible all -i kafkacluster/aws_ec2.yml -u ubuntu --private-key /var/lib/jenkins/.ssh/id_rsa -m shell -a 'kafka-broker-api-versions --bootstrap-server localhost:9092'
                """
            }
        }

        stage('Create Test Kafka Topic') {
            steps {
                echo "Creating test Kafka topic..."
                sh """
                    ansible all -i kafkacluster/aws_ec2.yml -u ubuntu --private-key /var/lib/jenkins/.ssh/id_rsa -m shell -a 'kafka-topics --create --topic test-topic --bootstrap-server localhost:9092 --partitions 3 --replication-factor 3'
                """
            }
        }

        stage('Clean Workspace') {
            steps {
                echo "Cleaning workspace..."
                cleanWs()
            }
        }
    }

    post {
        success {
            echo "Deployment completed successfully!"
        }
        failure {
            echo "Deployment failed. Check logs for errors."
        }
        always {
            echo "Pipeline finished."
        }
    }
}
