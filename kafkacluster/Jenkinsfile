pipeline {
    agent any

    environment {
        ANSIBLE_KEY       = '/var/lib/jenkins/.ssh/MYKAFKA.pem'
        ANSIBLE_USER      = 'ubuntu'
        INVENTORY         = 'kafkacluster/aws_ec2.yml'
        PLAYBOOK          = 'kafkacluster/site.yml'
        GIT_REPO          = 'https://github.com/AnithaAnnem/my-kafka-task.git'
        GIT_BRANCH        = 'main'
    }

    stages {

        stage('Checkout Code') {
            steps {
                echo "Checking out Git repository..."
                checkout([$class: 'GitSCM', 
                          branches: [[name: "*/${GIT_BRANCH}"]], 
                          userRemoteConfigs: [[url: "${GIT_REPO}"]]
                ])
            }
        }

        // ----------------- Ansible CI Checks -----------------
        stage('Ansible Lint') {
            steps {
                echo "Running ansible-lint..."
                sh '''
                export ANSIBLE_HOST_KEY_CHECKING=False
                ansible-lint $PLAYBOOK
                '''
            }
        }

        stage('Ansible Syntax Check') {
            steps {
                echo "Running Ansible syntax check..."
                sh '''
                export ANSIBLE_HOST_KEY_CHECKING=False
                ansible-playbook -i $INVENTORY $PLAYBOOK --syntax-check
                '''
            }
        }

        stage('Ansible Dry Run (Check Mode)') {
            steps {
                echo "Running Ansible dry run (check mode)..."
                sh '''
                export ANSIBLE_HOST_KEY_CHECKING=False
                ansible-playbook -i $INVENTORY $PLAYBOOK -u $ANSIBLE_USER --private-key $ANSIBLE_KEY --check
                '''
            }
        }

        // ----------------- Deployment Stages -----------------
        stage('Deploy Zookeeper') {
            steps {
                echo "Deploying Zookeeper cluster..."
                sh '''
                export ANSIBLE_HOST_KEY_CHECKING=False
                ansible-playbook -i $INVENTORY $PLAYBOOK -u $ANSIBLE_USER --private-key $ANSIBLE_KEY --tags zookeeper
                '''
            }
        }

        stage('Deploy Kafka') {
            steps {
                echo "Deploying Kafka cluster..."
                sh '''
                export ANSIBLE_HOST_KEY_CHECKING=False
                ansible-playbook -i $INVENTORY $PLAYBOOK -u $ANSIBLE_USER --private-key $ANSIBLE_KEY --tags kafka
                '''
            }
        }
    }

    post {
        success {
            echo "Ansible CI checks passed and Zookeeper & Kafka clusters deployed successfully!"
        }
        failure {
            echo "Pipeline failed. Please check the logs."
        }
        always {
            echo "Cleaning workspace..."
            cleanWs()
        }
    }
}
